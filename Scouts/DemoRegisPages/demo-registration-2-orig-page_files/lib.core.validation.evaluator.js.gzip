"cm.validation.evaluator".namespace();cm.validation.evaluator.AgeRangeContinuousEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{failureMessage:"Age ranges must be continuous"});cm.validation.evaluator.AgeRangeContinuousEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"AGERANGECONINUOUS"},evaluate:function(d){var a=this.GetConfigOptions().comparisonControl;if($$CM.isNull(a)){this._result.AddError("Comparison control is null or invalid")}else{if($$CM.isFunction(a)){var e=($$CM.isNull(this.GetConfigOptions().comparisonScope))?this:this.GetConfigOptions().comparisonScope;var b=a.call(e)}else{var b=a.GetData()}if($$CM.isNumber(d)){d=Number(d)}if($$CM.isNumber(b)){b=Number(b)}var c=Math.round((b-0.11)*100)/100;if(c==parseInt(b)){result=parseInt(b)+1==d}else{result=(Math.round((b+0.01)*100)/100)==d}if(result==false){this._result.AddError(this.GetConfigOptions().failureMessage)}}return this._result},configureDefaultOptions:function(){return new cm.validation.evaluator.AgeRangeContinuousEvaluatorConfigOptions()}});"cm.validation.evaluator".namespace();cm.validation.evaluator.BooleanEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{name:"Yes/No",RequireValue:null});cm.validation.evaluator.BooleanEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"BOOL"},configureDefaultOptions:function(){return new cm.validation.evaluator.BooleanEvaluatorConfigOptions()},evaluate:function(b){var a=this.GetConfigOptions();if(($$CM.isEmpty(b)||($$CM.parseBoolean(b)!=true&&$$CM.parseBoolean(b)!=false))&&a.IsRequired==true){if(!$$CM.isEmpty(a.FieldName)){this._result.AddError("<b>"+a.FieldName+"</b> is required")}else{this._result.AddError("Selection required")}return this._result}if(!$$CM.isNull(a.RequireValue)&&$$CM.parseBoolean(b)!=a.RequireValue){if(a.RequireValue==true){this._result.AddError("This field must be checked/selected.")}else{if(a.RequireValue==false){this._result.AddError("This field must not be checked/selected.")}else{throw"RequireValue for Boolean Evaluator must be true or false."}}}return this._result}});"cm.validation.evaluator".namespace();cm.validation.evaluator.ComparisonEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{comparisonScope:null,comparisonControl:null,comparison:$$CONDITION.EQUALS(),failureMessage:"Comparison failed",isDate:false});cm.validation.evaluator.ComparisonEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"COMPARISON"},evaluate:function(d){var a=this.GetConfigOptions().comparison;var b=this.GetConfigOptions().comparisonControl;if($$CM.isNull(b)){this._result.AddError("Comparison control is null or invalid")}else{if($$CM.isNull(a)){this._result.AddError("The comparison condition is null or invalid")}else{if($$CM.isFunction(b)){var f=($$CM.isNull(this.GetConfigOptions().comparisonScope))?this:this.GetConfigOptions().comparisonScope;var c=b.call(f)}else{var c=b.GetData()}if($$CM.isNumber(d)){d=parseFloat(d)}if($$CM.isNumber(c)){c=parseFloat(c)}if($$CM.isFunction(a)){var e=a(c,d)}else{var e=a.test(c,d,this.GetConfigOptions().isDate)}if(e==false){this._result.AddError(this.GetConfigOptions().failureMessage)}}}return this._result},configureDefaultOptions:function(){return new cm.validation.evaluator.ComparisonEvaluatorConfigOptions()}});"cm.validation.evaluator".namespace();cm.validation.CreditCardValidationConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{AcceptedCreditCardTypes:""});cm.validation.evaluator.CreditCardEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"CC"},evaluate:function(a){if($$CM.isEmpty(a)){this._result.AddError("Invalid value");return this._result}if(!this.validCreditCardNumber(a)){this._result.AddError("Invalid credit card number");return this._result}else{this._result=this.isAcceptedCreditCardType(a,this._configOptions.AcceptedCreditCardTypes)}return this._result},configureDefaultOptions:function(){return new cm.validation.CreditCardValidationConfigOptions()},validCreditCardNumber:function(a){if(!this.isFloat(a)){return false}else{var b=this.luhn(a);return b}},isAcceptedCreditCardType:function(c,a){var g=new cm.validation.ValidationResult();if(a!=null&&a.length>0){var d=0;if(c.length==16){if(parseInt(c.substr(0,2),10)>=51&&parseInt(c.substr(0,2),10)<=55){d=2}else{if(c.substr(0,1)=="4"){d=1}else{if(c.substr(0,4)=="6011"){d=3}}}}else{if(c.length==15){if(c.substr(0,2)=="34"||c.substr(0,2)=="37"){d=4}}}var e=a.split(",");var f=false;e.each(function(h){if(parseInt(d,10)==parseInt(h,10)){f=true}});if(!f){var b="";switch(d){case 0:g.AddError("We do not recognize this type of credit card.");break;case 1:g.AddError("We do not accept <b>Visa</b>.");break;case 2:g.AddError("We do not accept <b>Mastercard</b>.");break;case 3:g.AddError("We do not accept <b>Discover</b>.");break;case 4:g.AddError("We do not accept <b>American Express</b>.");break}}return g}else{g.AddError("We do not accept credit cards.");return g}},doLuhn:function(a){var e=a.replace(/\D/g,"").toArray();if(e.length>16){return false}var g=0;var d=e.length;var f=d%2;for(var c=0;c<d;c++){var b=e[c];if(c%2==f){b=b*2;if(b>9){b=b-9}}g=g+parseInt(b,10)}return(g%10==0)},luhn:function(a){return this.doLuhn(a)},validExpDate:function(a,b){var c=$F(a);var d=$F(b);var e=new Date();e.setFullYear(d,c,1);var f=new Date();if(e<f){return false}else{return true}},reFloat:/^((\d+(\.\d*)?)|((\d*\.)?\d+))$/,isFloat:function(a){return this.reFloat.test(a)}});"cm.validation.evaluator".namespace();cm.validation.evaluator.DateTimeEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{name:"Is Date",DataType:"date"});cm.validation.evaluator.DateTimeEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"DATE"},configureDefaultOptions:function(){return new cm.validation.evaluator.DateTimeEvaluatorConfigOptions()},evaluate:function(a){if($$CM.isEmpty(a)){this._result.AddError("Invalid value");return this._result}switch(this._configOptions.DataType){case"datetime":if(!this.isDateTime(a)){this._result.AddError("Invalid DateTime");return this._result}break;case"time":if(!this.isTime(a)){this._result.AddError("Invalid Time");return this._result}break;case"monthyear":if(!this.isMonthYear(a)){this._result.AddError("Invalid MonthYear");return this._result}break;case"birthdate":if(!$$CM.isBirthDate(a)){this._result.AddError("Invalid Birth Date");return this._result}break;default:if(!this.isDate(a)){this._result.AddError("Invalid Date");return this._result}break}return this._result},isDateTime:function(c){var b=c.split(" ");if(b.length<1){return false}var a=b[0];var d="";if(b.length>1){d+=b[1]}if(b.length>2){d+=" "+b[2]}if(this.isDate(a)){if(d.length>0){if(this.isTime(d)){return true}else{return false}}else{return true}}else{return false}},isMonthYear:function(f){var c=/^(\d{1,2})[\/][12](\d{3})$/;if(c.test(f)){var b=f.split("/");var e=b[0]+"/01/"+b[1];var a=new Date(e);return a.getMonth()+1==b[0]&&a.getFullYear()==b[1]}else{return false}},isDate:function(a){return $$CM.isDate(a)},isTime:function(e){var c=/^(\d{1,2}):(\d{2})(:(\d{2}))?(\s?(AM|am|PM|pm))?$/;if(c.test(e)){var f=e.match(c);var b=f[1]*1;var d=f[2]*1;var a=f[6];if(a!=null){if(b!=null&&(b<0||b>12)){return false}}else{if(b!=null&&(b<0||b>24)){return false}}if(d!=null&&(d<0||d>59)){return false}return true}else{return false}}});"cm.validation.evaluator".namespace();cm.validation.evaluator.DuplicateCustomFieldEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{source:null});cm.validation.evaluator.DuplicateCustomFieldEvaluator=Class.create(cm.validation.Evaluator,{evaluate:function(b){var a=this.GetConfigOptions().source;var d=a._viewport.Search(function(c){if(!$$CM.isNull(c.GetRenderedChild().GetConfigOptions().bindingKey)&&c.GetRenderedChild().GetConfigOptions().bindingKey==b&&c.GetRenderedChild()!=this.GetConfigOptions().source){return true}},this);if(!$$CM.isNull(d)){this._result.AddError("This custom field is already selected on this form.")}return this._result},configureDefaultOptions:function(){return new cm.validation.evaluator.DuplicateCustomFieldEvaluatorConfigOptions()}});"cm.validation.evaluator".namespace();cm.validation.evaluator.EmailEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{AllowMultiple:false,AllowMultipleSeparator:"\n",AllowMultipleSeparatorArray:$A(),name:"Is E-Mail Address"});cm.validation.evaluator.EmailEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"EMAIL"},evaluate:function(a){if($$CM.isEmpty(a)||this.isEmail(a)!=true){this._result.AddError("Invalid e-mail address")}return this._result},configureDefaultOptions:function(){return new cm.validation.evaluator.EmailEvaluatorConfigOptions()},reEmail:/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,isEmail:function(a){return this.reEmail.test(a)}});"cm.validation.evaluator".namespace();cm.validation.evaluator.GroupEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{name:"Is Required",IsRequired:true,__meta:{IsRequired:{hidden:true}}});cm.validation.evaluator.GroupEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"GROUP"},configureDefaultOptions:function(){return new cm.validation.evaluator.GroupEvaluatorConfigOptions()},evaluate:function(b){var a=this.GetConfigOptions();if(a.IsRequired==true&&($$CM.isEmpty(b)||$$CM.isArray(b))){if($$CM.isArray(b)){var c=false;b.each(function(d){if(d==true){c=true}},this);if(!c){this._result.AddError("Selection required")}return this._result}if(!$$CM.isEmpty(a.FieldName)){this._result.AddError("<b>"+a.FieldName+"</b> is required")}else{this._result.AddError("Selection required")}return this._result}return this._result}});"cm.validation.evaluator".namespace();cm.validation.evaluator.IntegerRangeContinuousEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{failureMessage:"Number ranges must be continuous"});cm.validation.evaluator.IntegerRangeContinuousEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"INTEGERRANGECONINUOUS"},evaluate:function(c){var a=this.GetConfigOptions().comparisonControl;if($$CM.isNull(a)){this._result.AddError("Comparison control is null or invalid")}else{if($$CM.isFunction(a)){var d=($$CM.isNull(this.GetConfigOptions().comparisonScope))?this:this.GetConfigOptions().comparisonScope;var b=a.call(d)}else{var b=a.GetData()}if($$CM.isNumber(c)){c=Number(c)}if($$CM.isNumber(b)){b=Number(b)}result=(b+1==c);if(result==false){this._result.AddError(this.GetConfigOptions().failureMessage)}}return this._result},configureDefaultOptions:function(){return new cm.validation.evaluator.IntegerRangeContinuousEvaluatorConfigOptions()}});"cm.validation.evaluator".namespace();cm.validation.evaluator.JsonEvaluator=Class.create(cm.validation.Evaluator,{evaluate:function(a){try{JSON.parse(a)}catch(b){this._result.AddError("Data must be valid JSON string value.  JSON parser error: ("+b+")")}return this._result}});"cm.validation.evaluator".namespace();cm.validation.evaluator.MergeFieldEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{failureMessage:"Merge Field Corrupted"});cm.validation.evaluator.MergeFieldEvaluator=Class.create(cm.validation.Evaluator,{evaluate:function(a){var c=this.validateMergeFields(a);if($$CM.isArray(c)&&c.length>0){var d="</br>The following merge field(s) is corrupted:</br>";for(var b=0;b<c.length;b++){d+="&nbsp;-&nbsp;"+c[b].Name+"</br>"}d+="Please recreate the merge field(s).";this._result.AddError(d)}return this._result},validateMergeFields:function(b){var f=$A();var g=$A();var a=0;while(a<b.length){var d=b.indexOf('<img alt="mergeField:',a);if(d<0){a=b.length}else{var c=b.indexOf("/>",d);var e=b.substring(d,c+1);f.push(e);a=c+2}}f.each(function(k){if(k.indexOf('mergefieldid="')<0){var j=k.indexOf('alt="mergeField: ');var h=k.indexOf('"',j+('alt="mergeField: ').length);var l=k.substring(j+('alt="mergeField: ').length,h);var i={};i.Name=l;g.push(i)}},this);return g},configureDefaultOptions:function(){return new cm.validation.evaluator.MergeFieldEvaluatorConfigOptions()}});"cm.validation.evaluator".namespace();cm.validation.evaluator.MultiSelectEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{name:"Is Required",IsRequired:true,RequiredLength:0,__meta:{IsRequired:{hidden:true}}});cm.validation.evaluator.MultiSelectEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"MULTISELECT"},configureDefaultOptions:function(){return new cm.validation.evaluator.MultiSelectEvaluatorConfigOptions()},evaluate:function(b){var a=this.GetConfigOptions();if($$CM.isEmpty(b)){if(!$$CM.isEmpty(a.FieldName)){this._result.AddError("<b>"+a.FieldName+"</b> is required")}else{this._result.AddError("Selection required")}return this._result}if((!$$CM.isNull(this._configOptions.MinValue)&&this._configOptions.MinValue>this.getValidatorControl().getSelectedIndex())||(!$$CM.isNull(this._configOptions.MaxValue)&&this._configOptions.MaxValue<this.getValidatorControl().getSelectedIndex())){this._result.AddError("Selection outside min/max bounds");return this._result}if((!$$CM.isNull(this._configOptions.MinSelected)&&this._configOptions.MinSelected>b.length)||(!$$CM.isNull(this._configOptions.MaxSelected)&&this._configOptions.MaxSelected<b.length)){this._result.AddError("Number selected outside min/max bounds");return this._result}if(!$$CM.isNull(this._configOptions.RequiredLength)&&b.length<this._configOptions.RequiredLength){this._result.AddError("The number of selected options must exceed "+this._configOptions.RequiredLength);return this._result}if(this._configOptions.IsRequired==true){var c=false;if($$CM.isArray(b)){b.each(function(e){if(!$$CM.isEmpty(e)){c=true}},this)}if(c!=true){this._result.AddError("Selection required")}return this._result}return this._result}});"cm.validation.evaluator".namespace();cm.validation.evaluator.NumberEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{DataType:null,MinValue:null,MaxValue:null,name:"Is Number",__meta:{DataType:{priority:30,fieldEditor:"cm.ui.fieldeditor.ListSelector",params:$A([{ID:"DECIMAL",Name:"DECIMAL"},{ID:"INTEGER",Name:"INTEGER"},{ID:"CURRENCY",Name:"CURRENCY"}])},MinValue:{priority:40},MaxValue:{priority:50}}});cm.validation.evaluator.NumberEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"NUMBER"},evaluate:function(a){if(!$$CM.isEmpty(a)&&!$$CM.isArray(a)&&!$$CM.isNumber(a)){a=a.replace(/[,\$]/g,"")}if($$CM.isEmpty(a)||!$$CM.isNumber(a)){this._result.AddError("Invalid value");return this._result}if(!$$CM.isNull(this._configOptions.DataType)){switch(this._configOptions.DataType.toUpperCase()){case"INT":case"INTEGER":if(!this.isInteger(a)){this._result.AddError("Data is not a valid 'integer' type");return this._result}break;case"FLOAT":case"DECIMAL":if(!this.isFloat(a)){this._result.AddError("Data is not a valid 'float' type");return this._result}break;case"CURRENCY":if(!this.isCurrency(a)){this._result.AddError("Data is not a valid 'currency' type");return this._result}break}}if((!$$CM.isNull(this._configOptions.MinValue)&&parseFloat(this._configOptions.MinValue)>parseFloat(a))||(!$$CM.isNull(this._configOptions.MaxValue)&&parseFloat(this._configOptions.MaxValue)<parseFloat(a))){this._result.AddError("Value exceeds min/max bounds");return this._result}return this._result},configureDefaultOptions:function(){return new cm.validation.evaluator.NumberEvaluatorConfigOptions()},isCurrency:function(a){a=a.replace(/\s/g,"");if(a.search(/^\d{1,3}(,?\d{3})*\.?(\d{1,2})?$/)==-1){return false}else{return true}},isInteger:function(a){if(a==""||a==null){return false}return(a.toString().search(/^-?[0-9]+$/)==0)},reFloat:/^(-)?((\d+(\.\d*)?)|((\d*\.)?\d+))$/,isFloat:function(a){return this.reFloat.test(a)}});"cm.validation.evaluator".namespace();cm.validation.RepeatingCharacterValidationConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{IgnoreValidation:true,MinOccurrences:0});cm.validation.evaluator.RepeatingCharacterEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"RepeatingCharacter"},evaluate:function(a){if(this.GetConfigOptions().MinOccurrences>0){if($$CM.isNull(a)){this._result.AddError("Invalid value");return this._result}if(this.hasAdjacentRepeatingCharacters(a)){this._result.AddError("Value must not contain repeating characters");return this._result}}return this._result},configureDefaultOptions:function(){return new cm.validation.RepeatingCharacterValidationConfigOptions()},hasAdjacentRepeatingCharacters:function(a,e){var j=$A();var b=a.toString().toArray();var f=null;var g=0;var h="";for(var d=0;d<b.length;d++){var c=b[d];if($$CM.isArray(e)==true&&e.exists(c)==false){if(c==f){g++;h+=f}else{if(g>0){j.push(h+f);g=0;h=""}}}f=c}if(g>0){j.push(h+f)}return j.any(function(i){return i.length>=this.GetConfigOptions().MinOccurrences},this)}});"cm.validation.evaluator".namespace();cm.validation.RepeatingNumberValidationConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{IgnoreValidation:true,MinOccurrences:0});cm.validation.evaluator.RepeatingNumberEvaluator=Class.create(cm.validation.evaluator.RepeatingCharacterEvaluator,{getType:function(){return"RepeatingNumber"},evaluate:function(a){if(this.GetConfigOptions().MinOccurrences>0){if(!$$CM.isNumber(a)){this._result.AddError("Invalid value");return this._result}if(this.hasAdjacentRepeatingDigits(a)){this._result.AddError("Number contains repeating digits");return this._result}}return this._result},configureDefaultOptions:function(){return new cm.validation.RepeatingNumberValidationConfigOptions()},hasAdjacentRepeatingDigits:function(b,a){return this.hasAdjacentRepeatingCharacters(b,a)}});"cm.validation.evaluator".namespace();cm.validation.evaluator.SelectEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{name:"Is Required",IsRequired:true,MinMaxErrorText:"Selection outside min/max bounds",__meta:{IsRequired:{hidden:true}}});cm.validation.evaluator.SelectEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"SELECT"},configureDefaultOptions:function(){return new cm.validation.evaluator.SelectEvaluatorConfigOptions()},evaluate:function(b){var a=this.GetConfigOptions();if($$CM.isEmpty(b)){if(!$$CM.isEmpty(a.FieldName)){this._result.AddError("<b>"+a.FieldName+"</b> is required")}else{this._result.AddError("Selection required")}return this._result}if((!$$CM.isNull(this._configOptions.MinValue)&&this._configOptions.MinValue>this.getValidatorControl().getSelectedIndex())||(!$$CM.isNull(this._configOptions.MaxValue)&&this._configOptions.MaxValue<this.getValidatorControl().getSelectedIndex())){this._result.AddError(a.MinMaxErrorText);return this._result}if(!$$CM.isNull(this._configOptions.IsRequired)&&this.getValidatorControl().getSelectedIndex()<0){this._result.AddError("Selection required");return this._result}return this._result}});"cm.validation.evaluator".namespace();cm.validation.SequentialNumberValidationConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{IgnoreValidation:true,MinOccurrences:0});cm.validation.evaluator.SequentialNumberEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"SequentialNumber"},evaluate:function(a){if(this.GetConfigOptions().MinOccurrences>0){if(!$$CM.isNumber(a)||a.trim().length!=9){this._result.AddError("Invalid value");return this._result}if(this.hasSequentialNumbers(a)){this._result.AddError("Number contains sequential values");return this._result}}return this._result},configureDefaultOptions:function(){return new cm.validation.SequentialNumberValidationConfigOptions()},hasSequentialNumbers:function(m){var k=$A();var k=$A();if(m.length<2){return k}var a=m.toString().toArray();var f=Number(a[0],10);var b=Number(a[1],10);var g=(b==(f+1))?1:(b==(f-1))?-1:0;var h=0;var j="";for(var e=1;e<a.length;e++){var c=Number(a[e],10);if(g>=0&&c==(f+1)){g=1;h++;j+=f.toString()}else{if(g<=0&&c==(f-1)){g=-1;h++;j+=f.toString()}else{if(h>0){k.push(j+f.toString());var l=(g<0&&c==(f+1))||(g>0&&c==(f-1));g=(l)?-g:0;h=(l)?1:0;j=(l)?f.toString():""}}}f=c}if(h>0){k.push(j+f.toString())}return k.any(function(d){return d.length>=this.GetConfigOptions().MinOccurrences},this)}});"cm.validation.evaluator".namespace();cm.validation.evaluator.TextEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{name:"Is Text",Pattern:null,PatternError:"The value entered contains invalid characters",__meta:{MaxLength:{hidden:false},MinLength:{hidden:false}}});cm.validation.evaluator.TextEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"TEXT"},evaluate:function(a){if($$CM.isEmpty(a)||!$$CM.isString(a)){this._result.AddError("Invalid string value")}var c=this.GetConfigOptions().Pattern;if(!$$CM.isNull(c)){var b=c.test(a);if(!b){this._result.AddError(this.GetConfigOptions().PatternError)}}return this._result},configureDefaultOptions:function(){return new cm.validation.evaluator.TextEvaluatorConfigOptions()}});____uniqueEvaluatorTable=new cm.ui.Hashtable();"cm.validation.evaluator".namespace();cm.validation.evaluator.UniqueEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{Key:"default",RootValidator:null});cm.validation.evaluator.UniqueEvaluator=Class.create(cm.validation.Evaluator,{evaluatorTable:____uniqueEvaluatorTable,initialize:function($super,a){$super(a);var b=this.GetConfigOptions().RootValidator;if($$CM.isNull(b)){throw"UniqueEvaluator requires a root validator"}b.ValidationComplete.subscribe(this.onValidatorFinished,this)},evaluate:function(a){var d=this.GetConfigOptions().Key;var b=this.evaluatorTable.get(d);if($$CM.isNull(b)){b=$A();this.evaluatorTable.put(d,b)}var c=b.find(function(e){return e==a});if(!$$CM.isNull(c)){this._result.AddError("Duplicate value error")}else{b.push(a)}this.evaluatorTable.put(d,b);return this._result},configureDefaultOptions:function(){return new cm.validation.evaluator.UniqueEvaluatorConfigOptions()},onValidatorFinished:function(c,a){var b=this.GetConfigOptions().Key;this.evaluatorTable.remove(b)}});"cm.validation.evaluator".namespace();cm.validation.evaluator.UrlEvaluatorConfigOptions=Class.create(cm.validation.ValidationConfigOptions,{name:"Is URL"});cm.validation.evaluator.UrlEvaluator=Class.create(cm.validation.Evaluator,{getType:function(){return"URL"},configureDefaultOptions:function(){return new cm.validation.evaluator.UrlEvaluatorConfigOptions()},evaluate:function(a){if($$CM.isNull(a)||!this.isUrl(a)){this._result.AddError("Invalid URL")}return this._result},isUrl:function(b,c){var a=/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/;a=/(http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/;return a.test(b)}});